:: daySystemStart [nobr hidden]

<<set $sched.sleepPassage = previous()>>
<<if $pub>>@@.note;testing info - went to sleep at <<print $sched.sleepPassage>>.@@<br><br><</if>>
ask about shower<br>
if shower clean makeup, hair, body, etc routine<br>
change into outfit designated for sleep<br>
actually go to <<link [[sleep|daySystem]]>><</link>>.

:: daySystem [nobr hidden]

/*THIS PASSAGE IS THE START OF SLEEPING*/
/*Initial beginning of night items are calculated here, primarily determining if there are dreams, and limiting access to toolbars during this period, to avoid problems. Issues w/health and such are also set for display here*/

<<set _text = either("Giving NPCs free will...","Repairing Rejuvinator...","Cleaning up femlube drips...","Preparing mammary glands for lactation...","Calculating uterine lining growth...","Injecting naughty dreams...","Preparing subliminal programming...","Checking Institute agent's infiltration progress...","Distracting player from ''real'' danger...","Determining victors in sperm battles...","Determining if peeping tom likes what he sees...","Getting sheets dirty...","Checking for new chemicals in the tap water...","Murdering the unpopular NPCs...","Processing Player's psychological profile...","Using ∞ based statistics to process love...","Checking for subdermal implant activity...","Determining how favorite NPCs are lying...","Eagerly anticipating a bad end...","Contemplating referential ethics...","Processing NPC suicides...","Abusing NPCs for plot purposes...","Calculating Appletree's Rohypnol supply...","Determining which NPCs have nothing left to lose...","Implementing hypnotic commands...","Determining local jail's degeneration...","Calculating growth of local cults...","Screwing something up...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Reticulating splines...","Reticulating splines...")>>
@@font-size:150%;.monospace;.white;.blinking;<<print _text>>@@
<<silently>>
/*basic tasks*/
<<set $status.sleep = true>>
<<set $showMenuButton = false>>
<<set _forward = [false,false]>>
<<set $sched.sleepActual = $time>>
/*run any impacts from diseases, etc that drop health*/


/*determine if need to show medical passage*/
<<if $status.health < 30>>
	<<set _forward[0] = "lowhealth">>
<<elseif ( $status.healthOld - $status.health ) >= 15>>
	<<set _forward[0] = "healthdrop">>
<<elseif $medChange>>
	<<set _forward[0] = "change">>
<<elseif $mindbreak>>
	<<set _forward[0] = "mindbreak">>
<<elseif $status.need > 2>>
	<<set _forward[0] = "need">>
<</if>>
/*determine dreams, if any*/
<<set _dreams = ["none","none"]>>
<<if $status.satisfaction < 30>>
	<<set _dreams.push("unsatisfied")>>
<</if>>
<<if $status.need > 0>>
	<<for _i to 0; _i < $status.need; _i++>>
		<<set _dreams.push("needy")>>
	<</for>>
<</if>>
<<if $status.pregA > 0 && ( $PC.pregTerm - $status.pregA ) < 4>>
	<<set _dreams.push("latepreg")>>
	<<set _dreams.push("latepreg")>>
<<elseif $status.pregA > 0>>
	<<set _dreams.push("preg")>>
<</if>>
<<if $status.pregB > 0 && ( $PC.pregTerm - $status.pregB ) < 4>>
	<<set _dreams.push("latepreg")>>
	<<set _dreams.push("latepreg")>>
<<elseif $status.pregB > 0>>
	<<set _dreams.push("preg")>>
<</if>>
<<set _forward[1] = either(_dreams)>>
<<set $temp = _forward>>
<<goto [[daySystemMedic]]>>
<</silently>>

:: daySystemMedic [nobr hidden]

<<if not $temp[0]>>
	<<goto [[daySystemDream]]>>
<<else>>
	<<set _passage = "daySystemDream">>
	<<switch $temp[0]>>
	<<case "lowhealth">>
	@@.warning;WARNING!@@<br><br>
	@@.exp;Your health is very low. You should seek medical treatment immediately.@@
	<<case "healthdrop">>
	@@.import;CAUTION@@<br><br>
	@@.exp;Your health dropped significantly today, you may want to seek medical attention.@@
	<<case "change">>
	This is a Placeholder & hook for a body/mind altering process.
	<<case "mindbreak">>
	Placeholder for mindbreak message
	<<case "need">>
	@@.import;CAUTION@@<br><br>
	@@.exp;Your need is getting high. See the guide for more information on need and other character stats.@@
	<</switch>>
	<br><br>
	<<link "Continue">><<goto [[_passage]]>><</link>>
<</if>>

:: daySystemDream [nobr hidden]

<<if $temp[1] == "none">>
	<<goto [[daySystemProcess]]>>
<<else>>
	This is a placeholder for one of many many (apx 45) dreams.
	<br><br>
	<<link [[Continue|daySystemProcess]]>><</link>>
<</if>>

:: daySystemProcess [nobr]

/*MAIN PASSAGE - Does important processing for next day!*/

<<set _text = either("Giving NPCs free will...","Repairing Rejuvinator...","Cleaning up femlube drips...","Preparing mammary glands for lactation...","Calculating uterine lining growth...","Injecting naughty dreams...","Preparing subliminal programming...","Checking Institute agent's infiltration progress...","Distracting player from ''real'' danger...","Determining victors in sperm battles...","Determining if peeping tom likes what he sees...","Getting sheets dirty...","Checking for new chemicals in the tap water...","Murdering the unpopular NPCs...","Processing Player's psychological profile...","Using ∞ based statistics to process love...","Checking for subdermal implant activity...","Determining how favorite NPCs are lying...","Eagerly anticipating a bad end...","Contemplating referential ethics...","Processing NPC suicides...","Abusing NPCs for plot purposes...","Calculating Appletree's Rohypnol supply...","Determining which NPCs have nothing left to lose...","Implementing hypnotic commands...","Determining local jail's degeneration...","Calculating growth of local cults...","Screwing something up...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Processing...","Reticulating splines...","Reticulating splines...")>>
@@font-size:150%;.monospace;.white;.blinking;<<print _text>>@@
<<silently>>
<<status 1>>
/*determine sleep time*/
<<if $sched.sleepActual >= 1200>>
	<<set _sleep = $sched.wakeTime - ( $sched.sleepActual - 2400 )>>
<<else>>
	<<set _sleep = $sched.wakeTime - $sched.sleepActual>>
<</if>>
<<set _sleep = Math.round((_sleep + 20)/100)>>
/*check for missed appointments*/
<<if $dayChange && $day != 0>>
	<<set _day = $day - 1>>
	<<if _day < 1>><<set _day += 7>><</if>>
	<<set _workday = $day>>
<<elseif $dayChange>>
	<<set _day = 7>>
	<<set _workday = $day>>
<<elseif $day == 0>>
	<<set _day = 8>>
	<<set _workday = 1>>
<<else>>
	<<set _day = $day>>
	<<set _workday = $day + 1>>
	<<if _workday > 7>><<set _workday = 1>><</if>>
<</if>>
<<if $sched.plans[_day].length > 0>>
	<<for _i to 0; _i < $sched.plans[_day].length; _i++>>
		<<if def $sched.plans[_day][_i].missed>>
			<<if $sched.plans[_day][_i].missed>>
				<<proccessMissedDate _day _i>>
			<</if>>
		<</if>>
	<</for>>
<</if>>
/*calculate loneliness increase*/
<<set _company = 0>>
<<if $sched.plans[_day].length > 0>>
	<<for _i to 0; _i < $sched.plans[_day].length; _i++>>
		<<if def $sched.plans[_day][_i].missed>>
			<<if not $sched.plans[_day][_i].missed && $sched.plans[_day][_i].type > 1>>
				<<set _company += 1>>
			<</if>>
		<</if>>
	<</for>>
<</if>>
<<switch _company>>
	<<case 0>>
		<<set $status.lonely += either(2,3,3,3,4,4,4,5,5,5,6,6)>>
		<<if not $traint.IN>>
			<<set $status.lonely += either(2,3,3,3,4,4,4,5,5,5,6,6)>>
		<</if>>
		<<if $trait.EX>>
			<<set $status.lonely += either(4,4,4,5,5,5,5,6,6,6,6,6)>>
		<</if>>
		<<if $trait.LowEsteem != 0>><<set $status.lonely += either(0,1,1,2,2,3)>><</if>>
		<<if $trait.Romantic == 1>><<set $status.lonely += either(0,1,1,2,2,3)>><</if>>
		<<if $status.lonely >= 75>><<happy -1>><</if>>
		<<if $status.lonely > 100>>
			<<set _rand = either(1,2,2)>>
			<<set $status.lonely = 100 - (10 * _rand)>>
			<<set _rand *= -1>>
			<<happy _rand>>
		<</if>>
	<<case 1>>
		<<set $status.lonely -= either(2,3,3,3,4,4,4,5,5,5,6,6)>>
		<<if not $traint.EX>>
			<<set $status.lonely -= either(2,3,3,3,4,4,4,5,5,5,6,6)>>
		<</if>>
		<<if $trait.IN>>
			<<set $status.lonely -= either(4,4,4,5,5,5,5,6,6,6,6,6)>>
		<</if>>
		<<if $status.lonely < 0>>
			<<if $trait.IN && $status.lonely < -3>><<happy -1>><</if>>
			<<set $status.lonely = 0>>
			<<if $trait.EX>><<happy 1>><</if>>
		<</if>>
		<<if $status.lonely < 30 && $trait.IN>>
			<<happy 1>>
		<<elseif $status.lonely < 10 && not $trait.EX>>
			<<happy 1>>
		<</if>>
	<<case 2>>
		<<set _mult = 2>>
		<<set $status.lonely -= either(2,3,3,3,4,4,4,5,5,5,6,6) * _mult>>
		<<if not $traint.EX>>
			<<set $status.lonely -= either(2,3,3,3,4,4,4,5,5,5,6,6) * _mult>>
		<</if>>
		<<if $trait.IN>>
			<<set $status.lonely -= either(4,4,4,5,5,5,5,6,6,6,6,6) * _mult>>
		<</if>>
		<<if $status.lonely < 0>>
			<<set $status.lonely = 0>>
			<<if $trait.IN>><<happy -1>><</if>>
			<<if $trait.EX>><<happy 1>><</if>>
		<</if>>
		<<if $status.lonely < 30 && $trait.IN>>
			<<happy 1>>
		<<elseif $status.lonely < 10 && not $trait.EX>>
			<<happy 1>>
		<</if>>
	<<case 3>>
		<<set _mult = 2.5>>
		<<set $status.lonely -= either(2,3,3,3,4,4,4,5,5,5,6,6) * _mult>>
		<<if not $traint.EX>>
			<<set $status.lonely -= either(2,3,3,3,4,4,4,5,5,5,6,6) * _mult>>
		<</if>>
		<<if $trait.IN>>
			<<set $status.lonely -= either(4,4,4,5,5,5,5,6,6,6,6,6) * _mult>>
		<</if>>
		<<if $status.lonely < 0>>
			<<if $trait.IN>><<happy -1>><</if>>
			<<set $status.lonely = 0>>
			<<if $trait.EX>><<happy 1>><</if>>
		<</if>>
		<<if $status.lonely < 30 && $trait.IN>>
			<<happy 1>>
		<<elseif $status.lonely < 10 && not $trait.EX>>
			<<happy 1>>
		<</if>>
	<<case 4>>
		<<set _mult = 2.75>>
		<<set $status.lonely -= either(2,3,3,3,4,4,4,5,5,5,6,6) * _mult>>
		<<if not $traint.EX>>
			<<set $status.lonely -= either(2,3,3,3,4,4,4,5,5,5,6,6) * _mult>>
		<</if>>
		<<if $trait.IN>>
			<<set $status.lonely -= either(4,4,4,5,5,5,5,6,6,6,6,6) * _mult>>
		<</if>>
		<<if $status.lonely < 0>>
			<<set $status.lonely = 0>>
			<<if $trait.IN>><<happy -1>><</if>>
			<<if $trait.EX>><<happy 1>><</if>>
		<</if>>
		<<if $status.lonely < 30 && $trait.IN>>
			<<happy 1>>
		<<elseif $status.lonely < 10 && not $trait.EX>>
			<<happy 1>>
		<</if>>
	<<case 5>>
		<<set _mult = 3>>
		<<set $status.lonely -= either(2,3,3,3,4,4,4,5,5,5,6,6) * _mult>>
		<<if not $traint.EX>>
			<<set $status.lonely -= either(2,3,3,3,4,4,4,5,5,5,6,6) * _mult>>
		<</if>>
		<<if $trait.IN>>
			<<set $status.lonely -= either(4,4,4,5,5,5,5,6,6,6,6,6) * _mult>>
		<</if>>
		<<if $status.lonely < 0>>
			<<set $status.lonely = 0>>
			<<if $trait.IN>><<happy -1>><</if>>
			<<if $trait.EX>><<happy 1>><</if>>
		<</if>>
		<<if $status.lonely < 30 && $trait.IN>>
			<<happy 1>>
		<<elseif $status.lonely < 10 && not $trait.EX>>
			<<happy 1>>
		<</if>>
	<<case default>>
		<<set $status.lonely += either(2,3,3,3,4,4,4,5,5,5,6,6)>>
		<<if not $traint.IN>>
			<<set $status.lonely += either(2,3,3,3,4,4,4,5,5,5,6,6)>>
		<</if>>
		<<if $trait.EX>>
			<<set $status.lonely += either(4,4,4,5,5,5,5,6,6,6,6,6)>>
		<</if>>
		<<if $trait.LowEsteem != 0>><<set $status.lonely += either(0,1,1,2,2,3)>><</if>>
		<<if $trait.Romantic == 1>><<set $status.lonely += either(0,1,1,2,2,3)>><</if>>
		<<if $status.lonely >= 75>><<happy -1>><</if>>
		<<if $status.lonely > 100>>
			<<set _rand = either(1,2,2)>>
			<<set $status.lonely = 100 - (10 * _rand)>>
			<<set _rand *= -1>>
			<<happy _rand>>
		<</if>>
<</switch>>
/*Empty plans for previous day*/
<<set $sched.plans[_day] = [nobr hidden]>>

/*check to see if/when you wake up*/
<<set $sched.sleepinText = ["your body just needed the extra rest"]>>
<<if ( $sched.workDays[_workday] && $sched.wirkTime[_workday][0] < 1100 && not $flag.Prologue && not $sched.vacation[_workday] && not $sched.sick[_workday] ) || $sched.alarmClock>>
	<<switch _sleep>>
	<<case 8 9 10 11 12 13 14>>
		<<set _threshold = 100>>
	<<case 7>>
		<<set _threshold = 98>>
	<<case 6>>
		<<set _threshold = 96>>
		<<set $sched.sleepinText.push("you didn't sleep long enough")>>
	<<case 5>>
		<<set _threshold = 94>>
		<<set $sched.sleepinText.push("you didn't sleep long enough")>>
	<<case 4>>
		<<set _threshold = 90>>
		<<set $sched.sleepinText.push("you didn't leave nearly enough time to sleep")>>
	<<case 3>>
		<<set _threshold = 80>>
		<<set $sched.sleepinText.push("you didn't leave nearly enough time to sleep")>>
	<<case 2>>
		<<set _threshold = 70>>
		<<set $sched.sleepinText.push("you didn't leave nearly enough time to sleep")>>
	<<case 1>>
		<<set _threshold = 50>>
		<<set $sched.sleepinText.push("you didn't leave nearly enough time to sleep")>>
	<<case 0>>
		<<set _threshold = 10>>
		<<set $sched.sleepinText.push("you didn't leave nearly enough time to sleep")>>
	<<case default>>
		<<set _threshold = 10>>
		<<set $sched.sleepinText.push("you didn't sleep long enough")>>
	<</switch>>
	<<if $status.fatigue == 9>>
		<<set _threshold -= 5>>
	<<elseif $status.fatigue > 9>>
		<<set _threshold -= 20>>
	<</if>>
	<<if $status.energy == 2>>
		<<set _threshold -= 2>>
		<<set $sched.sleepinText.push("you had a tiring day yesterday")>>
	<<elseif $status.energy == 1>>
		<<set _threshold -= 5>>
		<<set $sched.sleepinText.push("you over-exerted yourself yesterday")>>
	<<elseif $status.energy == 0>>
		<<set _threshold -= 15>>
		<<set $sched.sleepinText.push("you over-exerted yourself yesterday")>>
	<</if>>
	<<if $status.health < 30>>
		<<set _threshold -= 75>>
		<<set $sched.sleepinText.push("you're perilously ill")>>
	<<elseif $status.health < 50>>
		<<set _threshold -= 50>>
		<<set $sched.sleepinText.push("you're seriously ill")>>
	<<elseif $status.health < 70>>
		<<set _threshold -= 25>>
		<<set $sched.sleepinText.push("your poor health")>>
	<</if>>
	<<if $status.withdrawl>>
		<<set _threshold -= 20>>
		<<set $sched.sleepinText.push("your withdrawal symptoms")>>
	<</if>>
	<<if $status.drugs > 2>>
		<<set _threshold -= 30>>
		<<set $sched.sleepinText.push("the drugs")>>
	<</if>>
	<<if $status.alcohol > 2>>
		<<set _threshold -= 50>>
		<<set $sched.sleepinText.push("the alcohol")>>
	<</if>>
	<<set _roll = random(1,100)>>
	<<if _roll > _threshold && not $sched.sleepinOverride>>
		<<set $sched.sleepin = true>>
		<<set _extrahours = Math.trunc((100 - _threshold)/10)>>
		<<if _extrahours == 0>>
			<<set _extrahours = random (15,50)>>
			<<if $sched.wakeTime < 1000>>
				<<set _snu = $sched.wakeTime.slice(1,3)>>
			<<else>>
				<<set _snu = $sched.wakeTime.slice(2,4)>>
			<</if>>
			<<if ( _snu + _extrahours ) > 59>>
				<<set _extrahours += ( _snu - 60 ) + 100>>
			<</if>>
			<<set $sched.actualWake = $sched.wakeTime + _extrahours>>
		<<else>>
			<<set _sleep += _extrahours>>
			<<set _extrahours *= 100>>
			<<set _extramins = random (3,40)>>
			<<if $sched.wakeTime < 1000>>
				<<set _snu = $sched.wakeTime.slice(1,3)>>
			<<else>>
				<<set _snu = $sched.wakeTime.slice(2,4)>>
			<</if>>
			<<if ( _snu + _extramins ) > 59>>
				<<set _extramins += ( _snu - 60 ) + 100>>
			<</if>>
			<<set $sched.actualWake = $sched.wakeTime + _extrahours + _extramins>>
		<</if>>
	<<else>>
		<<set $sched.sleepin = false>>
		<<set $sched.actualWake = $sched.wakeTime>>
	<</if>>
<<else>> /* if non-work day, or work starts late, do this stuff */
	<<set $sched.sleepin = false>>
	<<set _threshold = 100>>
	<<if $status.fatigue == 9>>
		<<set _threshold -= 5>>
	<<elseif $status.fatigue > 9>>
		<<set _threshold -= 20>>
	<</if>>
	<<if $status.energy == 2>>
		<<set _threshold -= 2>>
		<<set $sched.sleepinText.push("you had a tiring day yesterday")>>
	<<elseif $status.energy == 1>>
		<<set _threshold -= 5>>
		<<set $sched.sleepinText.push("you over-exerted yourself yesterday")>>
	<<elseif $status.energy == 0>>
		<<set _threshold -= 15>>
		<<set $sched.sleepinText.push("you over-exerted yourself yesterday")>>
	<</if>>
	<<if $status.health < 30>>
		<<set _threshold -= 75>>
		<<set $sched.sleepinText.push("you're perilously ill")>>
	<<elseif $status.health < 50>>
		<<set _threshold -= 50>>
		<<set $sched.sleepinText.push("you're seriously ill")>>
	<<elseif $status.health < 70>>
		<<set _threshold -= 25>>
		<<set $sched.sleepinText.push("your poor health")>>
	<</if>>
	<<if $status.withdrawl>>
		<<set _threshold -= 20>>
		<<set $sched.sleepinText.push("your withdrawal symptoms")>>
	<</if>>
	<<if $status.drugs > 2>>
		<<set _threshold -= 30>>
		<<set $sched.sleepinText.push("the drugs")>>
	<</if>>
	<<if $status.alcohol > 2>>
		<<set _threshold -= 50>>
		<<set $sched.sleepinText.push("the alcohol")>>
	<</if>>
	<<set _extrahours = Math.trunc(((100 - _threshold)/10)-2)>>
	<<set _sleep = 8 + _extrahours>>
	<<set _extrahours *= 100>>
	<<set _randmins = random(3,15)>>
	<<set $sched.actualWake = $sched.sleepActual + 800 + _extrahours + _randmins>>
	<<if $sched.actualWake >= 2400>>
		<<set $sched.actualWake -= 2400>>
	<</if>>
<</if>>
/*Determine daily changes in stress & stats, and other impacts*/


/*regen fatigue energy and whatnot based on sleep time*/
<<set _number = Math.trunc( _sleep / 3)>>
<<for _i to 1; _i <= _number; _i++>>
	<<if $status.withdrawl && $status.addictMax >= 80>>
		<<set _j = _i * 4>>
		<<set $status.health -= random(0,_j)>>
	<<elseif $status.withdrawl && $status.addictMax >= 50>>
		<<set _j = _i * 2>>
		<<set $status.health -= random(0,_j)>>
	<<elseif $status.addictMax >= 50>>
		<<set _j = _i * -1>>
		<<set _k = Math.round(_i / 2)>>
		<<set $status.health += random(_j,_k)>>
	<<else>>
		<<set $status.health += random(-1,_i)>>
	<</if>>
	<<if not $trait.CL && $trait.Forgiving != -1>>
		<<set $status.anger -= either(1,2)>>
	<<elseif $trait.CL && $trait.Forgiving == -1>>
		<<set $status.anger -= either(0,1)>>
	<<else>>
		<<set $status.anger -= 1>>
	<</if>>
	<<if $status.anger < 0>>
		<<set $status.anger = 0>>
		<<if $status.overAnger>>
			<<set $status.overAnger = either(true,false)>>
		<</if>>
	<</if>>
<</for>>
<<set $status.fatigue -= Math.round(_sleep * 0.75)>>
<<if $status.fatigue < 0>><<set $status.fatigue = 0>><</if>>
<<if _sleep > 7>>
	<<set $status.energy += 7 + Math.round((_sleep - 7)/2)>>
<<else>>
	<<set $status.energy += _sleep>>
<</if>>

/*perform standard actions and calculations*/
<<if $groom.armpit != 0>><<set $armpitCount += 1>><</if>>
<<if $groom.leghair != 0>><<set $leghairCount += 1>><</if>>
<<if $groom.pube != 0>><<set $pubeCount += 1>><</if>>
<<if $groom.armpitCount >= 20>><<set $groom.armpit = 5>><<elseif $groom.armpitCount >= 10>><<set $groom.armpit = 4>><<elseif $groom.armpitCount >= 5>><<set $groom.armpit = 3>><<elseif $groom.armpitCount >= 2>><<set $groom.armpit = 2>><</if>>
<<if $groom.leghairCount >= 20>><<set $groom.leghair = 5>><<elseif $groom.leghairCount >= 10>><<set $groom.leghair = 4>><<elseif $groom.leghairCount >= 5>><<set $groom.leghair = 3>><<elseif $groom.leghairCount >= 2>><<set $groom.leghair = 2>><</if>>
<<if $groom.pubeCount >= 20>><<set $groom.pube = 5>><<elseif $groom.pubeCount >= 10>><<set $groom.pube = 4>><<elseif $groom.pubeCount >= 5>><<set $groom.pube = 3>><<elseif $groom.pubeCount >= 2>><<set $groom.pube = 2>><</if>>
<<if $groom.pubeCount >= 20 && $groom.pubeGrow < 5>><<set $groom.pubeGrow = 5>><<elseif $groom.pubeCount >= 10 && $groom.pubeGrow < 4>><<set $groom.pubeGrow = 4>><<elseif $groom.pubeCount >= 5 && $groom.pubeGrow < 3>><<set $groom.pubeGrow = 3>><<elseif $groom.pubeCount >= 2 && $groom.pubeGrow < 2>><<set $groom.pubeGrow = 2>><</if>>
<<if $groom.genMU != $makeup.gen.none || $groom.eyeMU != $makeup.eye.none || $groom.lipMU != $makeup.lip.none>>
	<<set $groom.clownMU = true>>
	<<if $groom.genMU != $makeup.gen.none>><<set $groom.genMU[2] = -3>><</if>>
	<<if $groom.eyeMU != $makeup.eye.none>><<set $groom.eyeMU[2] = -3>><</if>>
	<<if $groom.lipMU != $makeup.lip.none>><<set $groom.lipMU[2] = -3>><</if>>
<</if>>
<<if $groom.hairStyle == $hairStyle.neat>>
	<<set $groom.hairStyle = $hairStyle.unkempt>>
<<else>>
	<<set $groom.hairStyle = $hairStyle.messy>>
<</if>>
<<if $mutate.Cycle && $mutate.Multiple && $mutate.TwinWomb && $mutate.BC && $mutate.Gestate && $PC.fertility > 5 && $PC.hips >= 6 && $kink.Pregnancy && ( $mutate.Acid || $mutate.Mouth ) && $trait.libido >= 7 && $PC.tits.cupRaw >= 19>>
<<set $mutate.Goddess = true>>
<<else>>
<<set $mutate.Goddess = false>>
<</if>>
<<if $mutate.Cycle && $mutate.Multiple && $mutate.TwinWomb && $PC.fertility > 4 && $PC.hips >= 5 && $kink.Pregnancy>>
<<set $mutate.FertStorm = true>>
<<else>>
<<set $mutate.FertStorm = false>>
<</if>>
<<status 0>>
<<pcTotalATR>>
<<calcEnergyRate>>
<<set $sched.showered = false>>
<<set $sched.sleepWarnOn = true>>
/*set the time to when you awake*/
<<if $dayChange>>
	<<set $dayChange = false>>
<<else>>
	<<set $day += 1>>
	<<dateCalculate>>
<</if>>
<<set $timeCount = 0>>

/*BEFORE waking up, go to weekplanner if new week*/
<<if $day == 1>>
	<<goto [[WeekPlannerStart]]>>
	<<set $error += ", problem forwarding to week calculator!">>
<<else>>
	<<goto [[daySystemPreWake]]>>
<</if>>


:: daySystemPreWake [nobr hidden]

/*take out of sleep status and return menus*/
<<if $sched.actualWake >= 1000>>
	<<set _hour to Number($sched.actualWake.slice(0,2))>>
	<<set _min to Number($sched.actualWake.slice(2,4))>>
<<else>>
	<<set _hour to Number($sched.actualWake.slice(0,1))>>
	<<set _min to Number($sched.actualWake.slice(1,3))>>
<</if>>	
<<if _min >= 60>>
	<<set _min -= 60>>
	<<set _hour += 1>>
<</if>>
<<setTime _hour _min>>
<<status 0>>
<<set $status.sleep = false>>
<<set $showMenuButton = true>>
<<goto [[wakingUp]]>>
<</silently>>

:: wakingUp [nobr hidden]

@@.head2;<<= $dayText>>, the <<properNumberAbrv>> of <<= $monthText>>@@<br><br>
<<if $sched.sleepin>> /*if woke up late*/
	<<if $sched.workDays[$day]>>
		<<silently>>
		<<set _left = $sched.workTime[$day][0] - $time>>
		<<if _left >= 100 || _left <= -100>>
			<<set _left = ( Math.trunc(_left / 100) * 60 ) + ( _left - (Math.trunc(_left / 100 ) * 100))>>
		<</if>>
		<<if _makeit >= 35>><<set _makeit = 2>><<elseif _left >= 25>><<set _makeit = 1>><<elseif _left <=0>><<set _makeit = 0>><<else>><<set _makeit = -1>><</if>>
		<</silently>>
		@@.head3;Y@@ou fumble for your phone, staring with bleary eyes until you finally grasp the meaning of the numbers on the screen. @@.mono;Shit! I overslept. I've got to get to work!@@ You don't know whether it was because <<print $sched.sleepinText>>, or just plain bad luck, but you've definitely overslept.
		<br><br>
		Doing some fuzzy mental math, you try to figure out the time. You realize that <<if _makeit == -1>>you're already late for work, which started <<print (_left * -1)>> minutes ago.<<elseif _makeit == 0>>you aren't late yet, but work is starting in <<print _left>> minutes, and you'll never make it on time.<<elseif _makeit == 1>>you can just barely make it to work on time if you get dressed and leave right away.<<else>>you have a little time before work, but probably not enough for your full morning routine.<</if>>
		<br><br>''You can go to work:''<br>
		<<switch _makeit>>
			<<case -1>>
				<<link "Call work and prepare normally">><<set $temp = [21,_left]>><<goto [[daySystemCallWork]]>><</link>><br>
				<<link "Call work and rush in">><<set $temp = [11,_left]>><<goto [[daySystemCallWork]]>><</link>><br>
				''<<link "Just hurry and rush to work">><<set $temp = [1,_left]>><<goto [[daySystemCallWork]]>><</link>>''<br>
				''Or...''<br>
				<<link "Call in sick">><<set $temp = [31,_left]>><<goto [[daySystemCallWork]]>><</link>><br>
				<<link "Call and ask to use a vacation day">><<set $temp = [41,_left]>><<goto [[daySystemCallWork]]>><</link>><br>
				<<link "Just forget about work">><<set $temp = [51,_left]>><<goto [[daySystemCallWork]]>><</link>>
			<<case 0>>
				<<link "Call work and prepare normally">><<set $temp = [22,_left]>><<goto [[daySystemCallWork]]>><</link>><br>
				<<link "Call work and rush in">><<set $temp = [12,_left]>><<goto [[daySystemCallWork]]>><</link>><br>
				''<<link "Just hurry and rush to work">><<set $temp = [2,_left]>><<goto [[daySystemCallWork]]>><</link>>''<br>
				''Or...''<br>
				<<link "Call in sick">><<set $temp = [32,_left]>><<goto [[daySystemCallWork]]>><</link>><br>
				<<link "Call and ask to use a vacation day">><<set $temp = [42,_left]>><<goto [[daySystemCallWork]]>><</link>><br>
				<<link "Just forget about work">><<set $temp = [52,_left]>><<goto [[daySystemCallWork]]>><</link>>
			<<case 1>>
				<<link "Call work and prepare normally">><<set $temp = [23,_left]>><<goto [[daySystemCallWork]]>><</link>><br>
				''<<link "Just hurry to make it on time">><<set $temp = [3,_left]>><<goto [[daySystemRushedPrep]]>><</link>>''<br>
				''Or...''<br>
				<<link "Call in sick">><<set $temp = [33,_left]>><<goto [[daySystemCallWork]]>><</link>><br>
				<<link "Call and ask to use a vacation day">><<set $temp = [43,_left]>><<goto [[daySystemCallWork]]>><</link>><br>
				<<link "Just forget about work">><<set $temp = [53,_left]>><<goto [[daySystemCallWork]]>><</link>>
			<<case 2>>
				<<link "Call work and prepare normally">><<set $temp = [24,_left]>><<goto [[daySystemCallWork]]>><</link>><br>
				''<<link "Just get as ready as you can and go">><<set $temp = [4,_left]>><<goto [[daySystemCallWork]]>><</link>>''<br>
				<<link "Just hurry to make it on time">><<stress 5>><<goto [[daySystemRushedPrep]]>><</link>> @@.note;no makeup@@<br>
				''Or...''<br>
				<<link "Call in sick">><<set $temp = [34,_left]>><<goto [[daySystemCallWork]]>><</link>><br>
				<<link "Call and ask to use a vacation day">><<set $temp = [44,_left]>><<goto [[daySystemCallWork]]>><</link>><br>
				<<link "Just forget about work">><<set $temp = [54,_left]>><<goto [[daySystemCallWork]]>><</link>>
		<</switch>>
	<<else>>
		<<silently>>
		<<set _left = $sched.actualWake - $time>>
		<<if _left >= 100 || _left <= -100>>
			<<set _left = ( Math.trunc(_left / 100) * 60 ) + ( _left - (Math.trunc(_left / 100 ) * 100))>>
		<</if>>
		<</silently>>
		@@.head3;Y@@ou fumble for your phone, staring with bleary eyes until you finally grasp the meaning of the numbers on the screen. @@.mono;Oh shit, I overslept.@@ You don't know whether it was because <<print $sched.sleepinText>>, or just plain bad luck, but you've definitely overslept.
		<br><br>
		Doing some fuzzy mental math, you try to figure out the time. It looks like you missed your alarm about <<= _left>> minutes ago.
		<br><br>
		<<link "Get up and get ready">><<goto [[daySystemCasualPrep]]>><</link>>
	<</if>>
<<else>>
	<<if $sched.workDays[$day] && ( $time - $sched.workTime[$day][0] ) <= 130 && not $sched.vacation[$day] && not $sched.sick[$day] >>
		@@.head3;W@@ith a groan, you reach over to the nightstand and silence your phone alarm. @@.mono;Guess it's time to get ready for work...@@
		<br><br>''You can go to work:''<br>
		<<link "get up and get ready">><<goto [[daySystemNormalPrep]]>><</link>>
		''Or...''<br>
		<<link "Call in sick">><<set $temp = [35,666]>><<goto [[daySystemCallWork]]>><</link>><br>
		<<link "Call and ask to use a vacation day">><<set $temp = [45,666]>><<goto [[daySystemCallWork]]>><</link>><br>
		<<link "Just forget about work">><<set $temp = [55,666]>><<goto [[daySystemCallWork]]>><</link>>
	<<else>>
		@@.head3;W@@ith a groan, you reach over to the nightstand and silence your phone alarm. @@.mono;Guess it's time to get up...@@
		<br><br>
		<<link "get up and get ready">><<goto [[daySystemCasualPrep]]>><</link>>
	<</if>>
<</if>>
<br><br><br><br>@@font-size:50%;[[DEBUG EMERGENCY ESCAPE|daySystemCasualPrep]]@@
	
:: daySystemCallWork [nobr hidden]

<<silently>>
/*codes 0: hurry and rush to work (still late), 1: call and rush to work, 2: call and prep normal, 3: call ask for sick day, 4: call ask use vacation day, 5: just skip work */
<<set _code = $temp[0]>>
<<set _left = $temp[1]>>
<</silently>>
<<switch _code>>
	<<case 1>>You don't call, and you are late for work.
		<<set $job.stats.boss -= 10 ; $job.stats.coworker -= 5 ; $job.stats.subord -= 5>>
		<<set $job.late.times += 1 ; $job.late.recent += 1>>
		<<stress 10>>
		<<goto [[daySystemRushedPrep]]>>
	<<case 2>>
		<<set $job.stats.boss -= 8 ; $job.stats.coworker -= 3 ; $job.stats.subord -= 3>>
		<<set $job.late.times += 1 ; $job.late.recent += 1>>
		<<stress 10>>
		<<goto [[daySystemRushedPrep]]>>
	<<case 3>>
		<<set $job.stats.boss -= 5 ; $job.stats.coworker -= 1 ; $job.stats.subord -= 1>>
		<<set $job.late.times += 1 ; $job.late.recent += 1>>
		<<stress 5>>
		<<goto [[daySystemRushedPrep]]>>
	<<case 4>>
		<<set $job.stats.boss -= 5 ; $job.stats.coworker -= 1 ; $job.stats.subord -= 1>>
		<<set $job.late.times += 1 ; $job.late.recent += 1>>
		<<stress 5>>
		<<goto [[daySystemRushedPrep]]>>
	<<case 11>>
	
	<<case 12>>
	
	<<case 21>>
	
	<<case 22>>
	
	<<case 23>>
	
	<<case 24>>
	
	<<case 31>>
	
	<<case 32>>
	
	<<case 33>>
	
	<<case 34>>
	
	<<case 35>>
	
	<<case 41>>
		<<if $job.vacation.balance > 0>>
			<<set $job.late.vacation += 1 ;  $job.late.recent += 1 ; $job.late.called += 1 ; $job.late.times += 1>>
			<<set $job.vacation.balance -= 1 ; $job.vacation.used += 1>>
			<<set $job.stats.boss -= 12 ; $job.stats.coworker -= 10 ; $job.stats.subord -= 10>>
			You call your boss <<= $job.rules.boss>>. You're @@.peepbad;grudgingly@@ allowed to use one of your vacation days.
			<br><br>
			[[Start your day|daySystemCasualPrep]]
		<<else>>
			<<set $job.late.recent += 1 ; $job.late.called += 1 ; $job.late.times += 1>>
			<<set $job.stats.boss -= 15 ; $job.stats.coworker -= 8 ; $job.stats.subord -= 8>>
			You call your boss <<= $job.rules.boss>>. You're reminded that you don't have any vacation days to use, @@.peepbad;and told to hurry and get to work.@@
			<br><br>
			[[Rush to get to work|daySystemRushedPrep]]
		<</if>>
	<<case 42>>
			
	<<case 43>>
	
	<<case 44>>
	
	<<case 45>>
	
	<<case 51>>
		<<set $job.missed.times += 1 ; $job.missed.recent += 1>>
		<<set $job.stats.boss -= 25 ; $job.stats.coworker -= 15 ; $job.stats.subord -= 20>>
		<<if $job.stats.progress > = 20>><<set $job.stats.progress -= 20>><<else>><<set $job.stats.progress = 0>><</if>>
		<<goto [[daySystemCasualPrep]]>>
	<<case 51>>
		<<set $job.missed.times += 1 ; $job.missed.recent += 1>>
		<<set $job.stats.boss -= 25 ; $job.stats.coworker -= 15 ; $job.stats.subord -= 20>>
		<<if $job.stats.progress > = 20>><<set $job.stats.progress -= 20>><<else>><<set $job.stats.progress = 0>><</if>>
		<<goto [[daySystemCasualPrep]]>>
	<<case 53>>
		<<set $job.missed.times += 1 ; $job.missed.recent += 1>>
		<<set $job.stats.boss -= 25 ; $job.stats.coworker -= 15 ; $job.stats.subord -= 20>>
		<<if $job.stats.progress > = 20>><<set $job.stats.progress -= 20>><<else>><<set $job.stats.progress = 0>><</if>>
		<<goto [[daySystemCasualPrep]]>>
	<<case 54>>
		<<set $job.missed.times += 1 ; $job.missed.recent += 1>>
		<<set $job.stats.boss -= 25 ; $job.stats.coworker -= 15 ; $job.stats.subord -= 20>>
		<<if $job.stats.progress > = 20>><<set $job.stats.progress -= 20>><<else>><<set $job.stats.progress = 0>><</if>>
		<<goto [[daySystemCasualPrep]]>>
	<<case 55>>
		<<set $job.missed.times += 1 ; $job.missed.recent += 1>>
		<<set $job.stats.boss -= 25 ; $job.stats.coworker -= 15 ; $job.stats.subord -= 20>>
		<<if $job.stats.progress > = 20>><<set $job.stats.progress -= 20>><<else>><<set $job.stats.progress = 0>><</if>>
		<<goto [[daySystemCasualPrep]]>>
<</switch>>



:: daySystemRushedPrep [nobr hidden]

/*CHECK TO MAKE SURE YOU'RE IN YOUR OWN HOME GOES HERE!!!*/
/*will switch prep if not at your place or BF/Friends*/
/*need to add differentiation for doing or not doing hair*/
/*<<set _outfit = {}>>
<<set _outfit = clone($outfitUnder[_choice])>>
<<set $pcClothes.panties = _outfit.panties>>
<<set $pcClothes.leg = _outfit.leg>>
<<set $pcClothes.bra = _outfit.bra>>
<<set $pcClothes.swim = _outfit.swim>>
<<set $pcClothes.coordUnder = _outfit.coord>>
<<set $pcClothes.accessB = _outfit.accessB>>
<<set $pcClothes.accessP = _outfit.accessP>>
<<calcOutfitCombine "L">>*/
<<set $groom.hairStyle = $hairStyle[$groom.hairDefaultNorm]>>
<<addTime $groom.hairStyle[2]>>
<<set $groom.genMU = $makeup.gen.none ; $groom.eyeMU = $makeup.eye.none ; $groom.lipMU = $makeup.lip.none>>
<<addTime 5>>
<<goto [[jobSystemStart]]>>

:: daySystemNormalPrep [nobr hidden]

<<silently>>
/*CHECK TO MAKE SURE YOU'RE IN YOUR OWN HOME GOES HERE!!!*/
/*will switch prep if not at your place or BF/Friends*/
<<set $groom.hairStyle = $hairStyle[$groom.hairDefaultNorm]>>
<<addTime $groom.hairStyle[2]>>
<<set $groom.genMU = $makeup.gen.none ; $groom.eyeMU = $makeup.eye.none ; $groom.lipMU = $makeup.lip.none>>
<<set _otime = [$hour,$min]>>
<<set _timer = 0>>
<<if $groom.makeupTimeLimit >= ( $makeup.eye[$groom.eyeMUdefaultNorm][3] + _timer )>>
	<<applyMakeupEye $groom.eyeMUdefaultNorm>>
<</if>>
<<set _timer += $min - _otime[1]>>
<<set _timer += ( $hour - _otime[0] ) * 60>>
<<set _otime = [$hour,$min]>>
<<if $groom.makeupTimeLimit >= ( $makeup.lip[$groom.lipMUdefaultNorm][3] + _timer )>>
	<<applyMakeupLip $groom.lipMUdefaultNorm>>
<</if>>
<<set _timer += $min - _otime[1]>>
<<set _timer += ( $hour - _otime[0] ) * 60>>
<<set _otime = [$hour,$min]>>
<<if $groom.makeupTimeLimit >= ( $makeup.gen[$groom.genMUdefaultNorm][3] + _timer )>>
	<<applyMakeupGen $groom.genMUdefaultNorm>>
<</if>>
<<set _timer += $min - _otime[1]>>
<<set _timer += ( $hour - _otime[0] ) * 60>>
<<set _otime = [$hour,$min]>>
<<if $groom.eyeMU[2] == 1 && $groom.makeupRetryFail && ( _timer + $groom.eyeMU[3] ) <= $groom.makeupTimeLimit>>
	<<applyMakeupEye $groom.eyeMUdefaultNorm>>
<</if>>
<<set _timer += $min - _otime[1]>>
<<set _timer += ( $hour - _otime[0] ) * 60>>
<<set _otime = [$hour,$min]>>
<<if $groom.lipMU[2] == 1 && $groom.makeupRetryFail && ( _timer + $groom.lipMU[3] ) <= $groom.makeupTimeLimit>>
	<<applyMakeupEye $groom.lipMUdefaultNorm>>
<</if>>
<<set _timer += $min - _otime[1]>>
<<set _timer += ( $hour - _otime[0] ) * 60>>
<<set _otime = [$hour,$min]>>
<<if $groom.genMU[2] == 1 && $groom.makeupRetryFail && ( _timer + $groom.genMU[3] ) <= $groom.makeupTimeLimit>>
	<<applyMakeupEye $groom.genMUdefaultNorm>>
<</if>>
<<set _timer += $min - _otime[1]>>
<<set _timer += ( $hour - _otime[0] ) * 60>>
<<set _otime = [$hour,$min]>>
<<if $groom.eyeMU[2] <= 2 && $groom.makeupRetry && ( _timer + $groom.eyeMU[3] ) <= $groom.makeupTimeLimit>>
	<<applyMakeupEye $groom.eyeMUdefaultNorm>>
<</if>>
<<set _timer += $min - _otime[1]>>
<<set _timer += ( $hour - _otime[0] ) * 60>>
<<set _otime = [$hour,$min]>>
<<if $groom.lipMU[2] <= 2 && $groom.makeupRetry && ( _timer + $groom.lipMU[3] ) <= $groom.makeupTimeLimit>>
	<<applyMakeupEye $groom.lipMUdefaultNorm>>
<</if>>
<<set _timer += $min - _otime[1]>>
<<set _timer += ( $hour - _otime[0] ) * 60>>
<<set _otime = [$hour,$min]>>
<<if $groom.genMU[2] <= 2 && $groom.makeupRetry && ( _timer + $groom.genMU[3] ) <= $groom.makeupTimeLimit>>
	<<applyMakeupEye $groom.genMUdefaultNorm>>
<</if>>
<<if ( $groom.eyeMU[2] == 1 || $groom.lipMU[2] == 1 || $groom.genMU[2] == 1 ) && $groom.makeupWash>>
	<<set $groom.genMU = $makeup.gen.none ; $groom.eyeMU = $makeup.eye.none ; $groom.lipMU = $makeup.lip.none>>
	<<addTime 5>>
<</if>>
<</silently>>
<<goto [[jobSystemStart]]>>

:: daySystemCasualPrep [nobr hidden]

<<silently>>
/*CHECK TO MAKE SURE YOU'RE IN YOUR OWN HOME GOES HERE!!!*/
/*will switch prep if not at your place or BF/Friends*/
<<set $groom.hairStyle = $hairStyle[$groom.hairDefaultCasual]>>
<<addTime $groom.hairStyle[2]>>
<<set $groom.genMU = $makeup.gen.none ; $groom.eyeMU = $makeup.eye.none ; $groom.lipMU = $makeup.lip.none>>
<<set _otime = [$hour,$min]>>
<<set _timer = 0>>
<<if $groom.makeupTimeLimit >= ( $makeup.eye[$groom.eyeMUdefaultCasual][3] + _timer )>>
	<<applyMakeupEye $groom.eyeMUdefaultCasual>>
<</if>>
<<set _timer += $min - _otime[1]>>
<<set _timer += ( $hour - _otime[0] ) * 60>>
<<set _otime = [$hour,$min]>>
<<if $groom.makeupTimeLimit >= ( $makeup.lip[$groom.lipMUdefaultCasual][3] + _timer )>>
	<<applyMakeupLip $groom.lipMUdefaultCasual>>
<</if>>
<<set _timer += $min - _otime[1]>>
<<set _timer += ( $hour - _otime[0] ) * 60>>
<<set _otime = [$hour,$min]>>
<<if $groom.makeupTimeLimit >= ( $makeup.gen[$groom.genMUdefaultCasual][3] + _timer )>>
	<<applyMakeupGen $groom.genMUdefaultCasual>>
<</if>>
<<set _timer += $min - _otime[1]>>
<<set _timer += ( $hour - _otime[0] ) * 60>>
<<set _otime = [$hour,$min]>>
<<if $groom.eyeMU[2] == 1 && $groom.makeupRetryFail && ( _timer + $groom.eyeMU[3] ) <= $groom.makeupTimeLimit>>
	<<applyMakeupEye $groom.eyeMUdefaultCasual>>
<</if>>
<<set _timer += $min - _otime[1]>>
<<set _timer += ( $hour - _otime[0] ) * 60>>
<<set _otime = [$hour,$min]>>
<<if $groom.lipMU[2] == 1 && $groom.makeupRetryFail && ( _timer + $groom.lipMU[3] ) <= $groom.makeupTimeLimit>>
	<<applyMakeupEye $groom.lipMUdefaultCasual>>
<</if>>
<<set _timer += $min - _otime[1]>>
<<set _timer += ( $hour - _otime[0] ) * 60>>
<<set _otime = [$hour,$min]>>
<<if $groom.genMU[2] == 1 && $groom.makeupRetryFail && ( _timer + $groom.genMU[3] ) <= $groom.makeupTimeLimit>>
	<<applyMakeupEye $groom.genMUdefaultCasual>>
<</if>>
<<set _timer += $min - _otime[1]>>
<<set _timer += ( $hour - _otime[0] ) * 60>>
<<set _otime = [$hour,$min]>>
<<if $groom.eyeMU[2] <= 2 && $groom.makeupRetry && ( _timer + $groom.eyeMU[3] ) <= $groom.makeupTimeLimit>>
	<<applyMakeupEye $groom.eyeMUdefaultCasual>>
<</if>>
<<set _timer += $min - _otime[1]>>
<<set _timer += ( $hour - _otime[0] ) * 60>>
<<set _otime = [$hour,$min]>>
<<if $groom.lipMU[2] <= 2 && $groom.makeupRetry && ( _timer + $groom.lipMU[3] ) <= $groom.makeupTimeLimit>>
	<<applyMakeupEye $groom.lipMUdefaultCasual>>
<</if>>
<<set _timer += $min - _otime[1]>>
<<set _timer += ( $hour - _otime[0] ) * 60>>
<<set _otime = [$hour,$min]>>
<<if $groom.genMU[2] <= 2 && $groom.makeupRetry && ( _timer + $groom.genMU[3] ) <= $groom.makeupTimeLimit>>
	<<applyMakeupEye $groom.genMUdefaultCasual>>
<</if>>
<<if ( $groom.eyeMU[2] == 1 || $groom.lipMU[2] == 1 || $groom.genMU[2] == 1 ) && $groom.makeupWash>>
	<<set $groom.genMU = $makeup.gen.none ; $groom.eyeMU = $makeup.eye.none ; $groom.lipMU = $makeup.lip.none>>
	<<addTime 5>>
<</if>>
<<goto $sched.sleepPassage>>
<</silently>>

